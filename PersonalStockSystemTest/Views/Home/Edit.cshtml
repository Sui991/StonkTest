@model PersonalStockSystemTest.Models.model_List
@using PersonalStockSystemTest.EFModel;
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { }))
{
    <table class="table table-bordered">
        <tr>

            <th>交易時間</th>
            <th>股票代號</th>
            <th>股票名稱</th>
            <th>交易種類</th>
            <th>股數</th>
            <th>單價</th>
            <th>手續費</th>
            <th>交易稅</th>

        </tr>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*@foreach (var item in Model.Log_List)
            {
                <td>
                    @{ DateTime dateTime = (DateTime)item.time;
                        string str = dateTime.ToString("yyyy-MM-dd");}
                    @Html.EditorFor(model => str, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => str, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => item.stonkID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.stonkID, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => item.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.name, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => item.type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.type, "", new { @class = "text-danger" })

                </td>
                <td>
                    @Html.EditorFor(model => item.num, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.num, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => item.price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.price, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => item.tax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.tax, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => item.fax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.fax, "", new { @class = "text-danger" })
                </td>
            }

        @foreach (var item in Model.Log_List)
        {
        <tr>
            @{ DateTime dateTime = (DateTime)item.time;
                string str = dateTime.ToString("yyyy-MM-dd");
            }
            <td>@Html.DisplayFor(s => str) </td>
            <td>@Html.DisplayFor(s => item.stonkID) </td>
            <td>@Html.DisplayFor(s => item.name) </td>
            <td>@Html.DisplayFor(s => item.type) </td>
            <td>@Html.DisplayFor(s => item.num) </td>
            <td>@Html.DisplayFor(s => item.price) </td>
            <td>@Html.DisplayFor(s => item.tax) </td>
            <td>@Html.DisplayFor(s => item.fax) </td>

        </tr>
                }
        *@
<tr>
                <td>
                    @Html.EditorFor(model => model.st_time, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_time, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.st_stonkID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_stonkID, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.st_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_name, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.st_type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_type, "", new { @class = "text-danger" })

                </td>
                <td>
                    @Html.EditorFor(model => model.st_num, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_num, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.st_price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_price, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.st_tax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_tax, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.st_fax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.st_fax, "", new { @class = "text-danger" })
                </td>

            </tr>
        </table>

        <div class="btn">

            <input class="Search" type="submit" value="確認" />

        </div>

    }



            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
